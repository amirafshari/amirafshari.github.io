"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6880],{8256:t=>{t.exports=JSON.parse('{"blogPosts":[{"id":"remote-sensing-image-search-cbir","metadata":{"permalink":"/blog/remote-sensing-image-search-cbir","editUrl":"https://github.com/amirafshari/amirafshari.github.io/tree/main/blog/2024-05-18-remote-sensing-image-search.md","source":"@site/blog/2024-05-18-remote-sensing-image-search.md","title":"Multimodal Vision-Language Search on Satellite Images","description":"png","date":"2024-05-18T00:00:00.000Z","formattedDate":"May 18, 2024","tags":[{"label":"Deep Learning","permalink":"/blog/tags/deep-learning"},{"label":"Machine Learning","permalink":"/blog/tags/machine-learning"},{"label":"Computer Vision","permalink":"/blog/tags/computer-vision"},{"label":"Remote Sensing","permalink":"/blog/tags/remote-sensing"}],"readingTime":2.745,"hasTruncateMarker":true,"authors":[{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"}],"frontMatter":{"slug":"remote-sensing-image-search-cbir","title":"Multimodal Vision-Language Search on Satellite Images","authors":{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},"tags":["Deep Learning","Machine Learning","Computer Vision","Remote Sensing"]},"unlisted":false,"nextItem":{"title":"Automatic License Plate Detector","permalink":"/blog/license-plate-detector"}},"content":"![png](vision-language-search_files/header.png)\\n\x3c!--truncate--\x3e\\n\\n\\n\\nWith the rapid advancement of remote sensing technologies, the availability of large-scale satellite image datasets has grown exponentially. These datasets contain invaluable information for various applications, including environmental monitoring, urban planning, and disaster management. However, extracting specific categories of objects, such as identifying all ships within a dataset of one million samples, presents a significant challenge due to the sheer volume of data and the complexity of manual analysis.\\n\\n### Solution\\nThis task, which is overwhelming for human analysts, can be efficiently addressed using vector search techniques. By leveraging deep learning models to transform images into high-dimensional vectors and utilizing multimodal vision-text models such as CLIP, we can employ nearest neighbor search algorithms to quickly and accurately retrieve relevant images based on their content. For instance, you can search for \\"red ship floating on the sea\\" and use it as the query and the system provides you the appropriate instances of the dataset while there is no metadata available. This approach not only enhances the efficiency of data processing but also significantly improves speed of finding specific categories within vast datasets.\\n\\n\\n### Good to know\\n- I did not fine-tune CLIP for remote sensing text-image pairs, but it still works fine.\\n- By fine-tuning, we can enhance the accuracy.\\n- It\'s not a production-level (or even near-production-level) solution, so there is plenty of room for improvement in both speed and accuracy.\\n- We can use vector databases such as Weaviate or Redis instead of a simple Python list.\\n- The dataset is limited to approximately 14,000 samples (a combination of AID, FAIR1M_partial, RESICS_partial, ...).\\n- We can binarize the vectors to improve speed.\\n- You can find the [code on Github](https://github.com/amirafshari/rs-cbir)\\n\\n\\n\\n```python\\nimport matplotlib.pyplot as plt\\nimport numpy as np\\n\\nimport torch\\nfrom torchvision import models, transforms\\nfrom sklearn.neighbors import NearestNeighbors\\nimport clip\\n\\n\\nimport random\\nimport os\\nimport glob\\n\\nfrom PIL import Image\\n```\\n\\n\\n```python\\ndevice = torch.device(\\"cuda\\" if torch.cuda.is_available() else \\"cpu\\")\\ndevice\\n```\\n\\n\\n\\n\\n    device(type=\'cuda\')\\n\\n\\n\\n# Model\\n- https://github.com/mlfoundations/open_clip\\n- https://github.com/openai/CLIP/blob/main/README.md\\n- CLIP\\n\\n\\n```python\\nmodel, preprocess = clip.load(\\"ViT-B/32\\", device=device)\\n```\\n\\n### Image Embedding\\n\\n\\n```python\\n# Walk into directoies to find images and convert them to vectors\\nimage_paths = []\\nfeatures = []\\nfor root, dirs, files in os.walk(\'datasets/\'):\\n    for file in files:\\n        if file.endswith((\\".jpg\\", \\".tif\\", \\".png\\")):\\n            file_path = os.path.join(root, file)\\n            image_paths.append(file_path)\\n\\n            img = Image.open(file_path)\\n            \\n            with torch.no_grad():\\n                feature = model.encode_image(preprocess(img).unsqueeze(0).to(device)).detach().cpu().numpy()\\n            features.append(feature)\\n\\n\\nprint(len(features), \' Images Found!\')\\nf = np.concatenate(features, axis=0)\\n```\\n\\n    14099  Images Found!\\n\\n\\n- Took ~ 2m 30s on NVIDIA 3060\\n\\n# Dataset Visualization\\n\\n\\n```python\\n# Here we randomly select an image from dataset as our query image\\nrandompath = image_paths.copy()\\nrandom.shuffle(randompath)\\n\\nn = 50\\n\\n\\n# Plot query image\\nrows, columns = 10, 5\\nfig, axs = plt.subplots(rows, columns, figsize=(20, 50), squeeze=True)\\n\\n\\nn = 0\\nfor i in range(rows):\\n    for j in range(columns):\\n\\n        axs[i][j].imshow(Image.open(randompath[n]))\\n        axs[i][j].set_title(f\'Instance {n}\')\\n        n += 1\\nplt.show()\\n```\\n\\n\\n    \\n![png](vision-language-search_files/dataset-p1.png)\\n![png](vision-language-search_files/dataset-p2.png)\\n![png](vision-language-search_files/dataset-p3.png)\\n\\n    \\n\\n\\n### NN Search\\n\\n\\n```python\\n# Text Embedding (Query feature)\\nquery = \'stadium\'\\nquery = clip.tokenize(query).to(device)\\nquery = model.encode_text(query).detach().cpu()\\n```\\n\\n\\n```python\\n# NN Search\\nk = 50\\nneigh = NearestNeighbors(n_neighbors=k, algorithm=\'brute\')\\n```\\n\\n\\n```python\\nneigh.fit(f)\\ndistances, indices = neigh.kneighbors(query)\\n```\\n\\n\\n```python\\nrows, columns = 10, 5\\nfig, axs = plt.subplots(rows, columns, figsize=(20, 50))\\n\\n\\nn = 0\\nfor i in range(rows):\\n    for j in range(columns):\\n\\n        axs[i][j].imshow(Image.open(image_paths[indices[0][n]]))\\n        axs[i][j].set_title(f\'Nearest Neighbor {n}\')\\n        n += 1\\nplt.show()\\n```\\n\\n\\n    \\n![png](vision-language-search_files/neighbors-1.png)\\n![png](vision-language-search_files/neighbors-2.png)\\n![png](vision-language-search_files/neighbors-3.png)"},{"id":"license-plate-detector","metadata":{"permalink":"/blog/license-plate-detector","editUrl":"https://github.com/amirafshari/amirafshari.github.io/tree/main/blog/2021-09-02-license-plate-detector.md","source":"@site/blog/2021-09-02-license-plate-detector.md","title":"Automatic License Plate Detector","description":"result-9","date":"2021-09-02T00:00:00.000Z","formattedDate":"September 2, 2021","tags":[{"label":"Object Detection","permalink":"/blog/tags/object-detection"},{"label":"Computer Vision","permalink":"/blog/tags/computer-vision"},{"label":"Deep Learning","permalink":"/blog/tags/deep-learning"}],"readingTime":2.315,"hasTruncateMarker":true,"authors":[{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"}],"frontMatter":{"slug":"license-plate-detector","title":"Automatic License Plate Detector","authors":{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},"tags":["Object Detection","Computer Vision","Deep Learning"]},"unlisted":false,"prevItem":{"title":"Multimodal Vision-Language Search on Satellite Images","permalink":"/blog/remote-sensing-image-search-cbir"},"nextItem":{"title":"Train a Custom Object Detector","permalink":"/blog/train-custom-object-detector"}},"content":"![result-9](https://user-images.githubusercontent.com/17769927/134549834-da73a045-05c9-4d6c-8772-90c4dca67cf7.jpg)\\n\x3c!--truncate--\x3e\\n\\n\\n## Exploratory Data Analysis\\nHow our data looks like?  \\nAnnotations format (YOLO Format): [class, x_center, y_center, obj_width, obj_height]  \\n\\n\\n### Distributions\\n\\n![1](https://user-images.githubusercontent.com/17769927/134396237-178893ef-18f1-4df6-b3ea-fe4b235e3a27.png)\\n     \\n\\n\\nThey make sense for number plate images  \\n*   x values are well distributed, which means the cameraman did a good job :D\\n*   y values are well distributed as well, but, most of the objects are on top of our images.\\n*   both height and width make sense, because our object is licence plate and they all have almost similiar sizes.\\n\\n\\n### X vs Y & Height vs Width\\n\\n![2](https://user-images.githubusercontent.com/17769927/134396293-df5113b7-9237-4dfc-81ac-1a2bf6187826.png)\\n\\n*   As mentioned above, there is a lack in our dataset in buttom-half part of xy plane.\\n*   As we can see, the center of our x axis is dense, it\'s beacuse humans put the object in the center of the camera.\\n\\n\\n\\n## Tensorflow Implementation for YOLOv4\\n**It\'s [recommended](https://github.com/hunglc007/tensorflow-yolov4-tflite#traning-your-own-model) to train your custom detector on [darknet](https://amirafshari.com/blog/train-custom-object-detector), rather than this implemntation, and then convert your weights and use this implemntation.**\\n\\n\\n```python\\n!git clone https://github.com/hunglc007/tensorflow-yolov4-tflite\\n```\\n\\n### Environment Setup\\n\\n#### Conda Environment\\n\\n\\n```python\\n# Create\\n# tf < 2.5 | python = 3.7\\n# tf > 2.5 | python > 3.9\\n!conda create --name envname python=3.7\\n\\n# Activate\\n!activate envname\\n```\\n\\n#### Requirements\\n\\n\\n```python\\n# in tf > 2.5 both cpu and gpu use the same package\\n\\n# GPU\\n!pip install -r requirements-gpu.txt\\n\\n# CPU\\n!pip install -r requirements.txt\\n```\\n\\n#### Check\\n\\n\\n```python\\n!conda list # installed packages in current env\\n!python --version\\n```\\n\\n#### Set the environment as jupyter kernel\\n\\n\\n```python\\n!pip install ipykernel\\n```\\n\\n\\n```python\\n!python -m ipykernel install --user --name=envname\\n```\\n\\nThen choose yolov4tf from kernels in your notebook\\n\\n### Tensorflow\\n\\n#### Convert weights\\n\\n\\n```python\\n!python save_model.py --weights ./data/yolov4.weights --output ./checkpoints/yolov4-416 --input_size 416 --model yolov4\\n```\\n\\n#### COCO Dataset\\n\\n```python\\n!python detect.py --weights ./checkpoints/yolov4-416 --size 416 --model yolov4 --image ./data/kite.jpg\\n```\\n\\n#### Custom Dataset\\n\\n*   Create a custom.names file in data/classes and type your class (based on your weights and training)\\n*   Call the custom.names in config.py (change coco.names to custom.names)\\n*   Change the paths in detect.py\\n    \\n\\n\\n```python\\n!python detect.py --weights ./checkpoints/custom --size 416 --model yolov4 --image ./data/custom.jpg\\n```\\n![result](https://user-images.githubusercontent.com/17769927/134549864-703159d9-a8f2-41d0-b4ef-48e52bf770b9.jpg)\\n\\n### 3. Tflite\\nRecommended for mobile and edge devices.\\n\\n#### Convert\\n\\n```python\\n# Save tf model for tflite converting\\n!python save_model.py --weights ./data/yolov4.weights --output ./checkpoints/yolov4-416 --input_size 416 --model yolov4 --framework tflite\\n\\n# YOLOv4\\n!python convert_tflite.py --weights ./checkpoints/yolov4-416 --output ./checkpoints/yolov4-416.tflite\\n```\\n\\n#### Demo\\n\\n```python\\n!python detect.py --weights ./checkpoints/yolov4-416.tflite --size 416 --model yolov4 --image ./data/kite.jpg --framework tflite\\n```\\n![result-9](https://user-images.githubusercontent.com/17769927/134549834-da73a045-05c9-4d6c-8772-90c4dca67cf7.jpg)\\n\\n\\n## Metrics\\n\\n*   Precision: 91 %\\n*   Average Precision: 89.80 %\\n*   Recall: 86 %\\n*   F1-score: 88 %\\n*   Average IoU: 74.06 %\\n*   mAP@0.5: 89.80 %\\n*   Confusion Matrix:\\n    *   TP = 439\\n    *   FP = 45\\n    *   FN = 73\\n    *   unique_truth_count (TP+FN) = 512\\n    *   detections_count = 805"},{"id":"train-custom-object-detector","metadata":{"permalink":"/blog/train-custom-object-detector","editUrl":"https://github.com/amirafshari/amirafshari.github.io/tree/main/blog/2021-08-28-train-custom-object-detector.md","source":"@site/blog/2021-08-28-train-custom-object-detector.md","title":"Train a Custom Object Detector","description":"download","date":"2021-08-28T00:00:00.000Z","formattedDate":"August 28, 2021","tags":[{"label":"Object Detection","permalink":"/blog/tags/object-detection"},{"label":"Computer Vision","permalink":"/blog/tags/computer-vision"},{"label":"Deep Learning","permalink":"/blog/tags/deep-learning"}],"readingTime":2.22,"hasTruncateMarker":true,"authors":[{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"}],"frontMatter":{"slug":"train-custom-object-detector","title":"Train a Custom Object Detector","authors":{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},"tags":["Object Detection","Computer Vision","Deep Learning"]},"unlisted":false,"prevItem":{"title":"Automatic License Plate Detector","permalink":"/blog/license-plate-detector"},"nextItem":{"title":"Persian Podcasts on Spotify","permalink":"/blog/spotify-persian-podcasts"}},"content":"![download](https://user-images.githubusercontent.com/17769927/138662797-827178bd-ce03-4896-b093-1705c3ac6d4f.png)\\n\x3c!--truncate--\x3e\\n\\n\\n## Darknet Configurations\\n**This documentation is for Google Colab. If you want to know how to compile darknet on your linux local machine (Ubuntu 20.04), please read [this documentation](https://github.com/amirafshari/LPD-YOLOv4/blob/master/darknet-linux.md).**\\n\\n```python\\n# clone repo\\n#!git clone https://github.com/AlexeyAB/darknet\\n!git clone https://github.com/amirafshari/LPD-YOLOv4\\n```\\n\\n### GPU\\n```python\\n# change makefile to have GPU and OPENCV enabled\\n%cd darknet\\n!sed -i \'s/OPENCV=0/OPENCV=1/\' Makefile\\n!sed -i \'s/GPU=0/GPU=1/\' Makefile\\n!sed -i \'s/CUDNN=0/CUDNN=1/\' Makefile\\n!sed -i \'s/CUDNN_HALF=0/CUDNN_HALF=1/\' Makefile\\n```\\n\\n```python\\n# verify CUDA\\n!/usr/local/cuda/bin/nvcc --version\\n```\\n\\n```python\\n# make darknet\\n!make\\n```\\n\\n\\n### Weights\\n```python\\n# pre-trained weights on MS COCO dataset\\n!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights\\n```\\n\\n```python\\n# pre-trained weights for the convolutional layers\\n!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137\\n```\\n\\n\\n### Generate train.txt and test.txt\\nThese files are not in the official repo, but you can find them in my repository.\\n\\n```python\\n!python generate_train.py\\n!python generate_test.py\\n```\\n\\n### Configurations\\nWe need to change/create these files (I configured them for our object (which is license plate), and put them in this repository):\\n*   data/obj.names\\n*   data/obj.data\\n*   cfg/yolov4-custom.cgf\\n*   cfg/yolov4-obj.cfg\\n\\n\\n## Training\\n### Configurations\\nhttps://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects  \\n\\n*   1 Epoch = images_in_train_txt / batch = 2000 / 32 = 62.5\\n\\n\\n\\n### Train\\n\\n```python\\n# Access Denied Error\\n!chmod +x ./darknet\\n```\\n\\n```python\\n# set custom cfg to train mode \\n%cd cfg\\n!sed -i \'s/batch=1/batch=64/\' yolov4-obj.cfg\\n!sed -i \'s/subdivisions=1/subdivisions=16/\' yolov4-obj.cfg\\n%cd ..\\n```\\n\\n```python\\n!./darknet detector train ./data/obj.data ./cfg/yolov4-obj.cfg yolov4.conv.137 -dont_show -map\\n```\\n\\n### Restart\\nIn case of intruption, we can restart training from our last weight.  \\n(every 100 iterations our weights are saved to backup folder in yolov4-obj_last.weights) (~every 30 minutes)  \\n(every 1000 iterations our weight are saved to backup folder in yolo-obj_xxxx.weights)\\n\\n```python\\n!./darknet detector train ./data/obj.data ./cfg/yolov4-obj.cfg ./backup/yolov4-obj_last.weights -dont_show -map\\n```\\n\\n## Sanity Check\\n\\n#### Setup\\n\\n```python\\n# set custom cfg to test mode \\n%cd cfg\\n!sed -i \'s/batch=64/batch=1/\' yolov4-obj.cfg\\n!sed -i \'s/subdivisions=16/subdivisions=1/\' yolov4-obj.cfg\\n%cd ..\\n```\\n\\n```python\\ndef imShow(path):\\n  import cv2\\n  import matplotlib.pyplot as plt\\n  %matplotlib inline\\n\\n  image = cv2.imread(path)\\n  height, width = image.shape[:2]\\n  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)\\n\\n  fig = plt.gcf()\\n  fig.set_size_inches(18, 10)\\n  plt.axis(\\"off\\")\\n  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))\\n  plt.show()\\n```\\n\\n#### COCO Dataset\\n\\n```python\\n!./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights data/person.jpg\\n```\\n\\n```python\\nimShow(\'./predictions.jpg\')\\n```\\n![download](https://user-images.githubusercontent.com/17769927/138662797-827178bd-ce03-4896-b093-1705c3ac6d4f.png)\\n\\n\\n#### Custom Dataset\\n\\n```python\\n!./darknet detector test ./data/obj.data ./cfg/yolov4-obj.cfg ./backup/yolov4-obj_last.weights ../Cars354.png -thresh 0.3\\n```\\n\\n```python\\nimShow(\'./predictions.jpg\')\\n```\\n![result-4](https://user-images.githubusercontent.com/17769927/134551901-37ff3f6d-37ae-42dc-96c3-8064786355fe.jpg)\\n\\n\\n**To process a list of images data/train.txt and save results of detection to result.json file use**\\n\\n```python\\n!./darknet detector test data/obj.data cfg/yolov4-obj.cfg backup/yolov4-obj_last.weights -ext_output -dont_show -out result.json < data/test.txt\\n```\\n\\n## Metrics\\n**Use -map flag while training for charts**  \\nmAP-chart (red-line) and Loss-chart (blue-line) will be saved in root directory.  \\nmAP will be calculated for each 4 Epochs ~ 240 batches\\n\\n```python\\n!./darknet detector map data/obj.data cfg/yolov4-obj.cfg backup/custom.weights\\n```"},{"id":"spotify-persian-podcasts","metadata":{"permalink":"/blog/spotify-persian-podcasts","editUrl":"https://github.com/amirafshari/amirafshari.github.io/tree/main/blog/2021-06-25-persian-podcasts-spotify.md","source":"@site/blog/2021-06-25-persian-podcasts-spotify.md","title":"Persian Podcasts on Spotify","description":"spotify-persian-podcast","date":"2021-06-25T00:00:00.000Z","formattedDate":"June 25, 2021","tags":[{"label":"Data Analysis","permalink":"/blog/tags/data-analysis"},{"label":"API","permalink":"/blog/tags/api"}],"readingTime":7.515,"hasTruncateMarker":true,"authors":[{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"}],"frontMatter":{"slug":"spotify-persian-podcasts","title":"Persian Podcasts on Spotify","authors":{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},"tags":["Data Analysis","API"]},"unlisted":false,"prevItem":{"title":"Train a Custom Object Detector","permalink":"/blog/train-custom-object-detector"},"nextItem":{"title":"Housing Data Analysis","permalink":"/blog/housing-data-analysis"}},"content":"![spotify-persian-podcast](https://user-images.githubusercontent.com/17769927/223347442-2b68090c-1d6a-48f5-9cde-b734a87ce5db.png)\\n\x3c!--truncate--\x3e\\n# Libs\\n\\n\\n```python\\n# Recieving Data from Spotify\\nimport spotipy\\nfrom spotipy.oauth2 import SpotifyClientCredentials\\nimport pandas as pd\\nimport matplotlib.pyplot as plt\\n```\\n\\n# API\\n\\n\\n```python\\nsp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(client_id=\\"\\",\\n                                                           client_secret=\\"\\"))\\n```\\n\\n# Explore\\n\\n\\n```python\\nshow = sp.search(q=\'\u067e\u0627\u062f\u06a9\u0633\u062a\', type=\'show\', market=\'US\', offset=0, limit=50)\\n#show[\'shows\'][\'items\'][0]\\n```\\n\\n# Prepare\\n\\n\\n```python\\nnames = []\\ndescription = []\\npublisher = []\\ntotal_episodes = []\\nexternal_urls = []\\nfor i in range(20):\\n    show = sp.search(q=\'\u067e\u0627\u062f\u06a9\u0633\u062a\', type=\'show\', market=\'US\', offset=i*50, limit=50)\\n    show = show[\'shows\'][\'items\']\\n    for e in show:\\n        names.append(e[\'name\'])\\n        description.append(e[\'description\'])\\n        publisher.append(e[\'publisher\'])\\n        total_episodes.append(e[\'total_episodes\'])\\n        external_urls.append(e[\'external_urls\'][\'spotify\'])\\n```\\n\\n\\n```python\\nnames = pd.Series(names)\\ndescription = pd.Series(description)\\npublisher = pd.Series(publisher)\\ntotal_episodes = pd.Series(total_episodes)\\nexternal_urls = pd.Series(external_urls)\\n```\\n\\n\\n```python\\ndf = pd.DataFrame(\\n{\\n    \'Name\': names,\\n    \'Publisher\': publisher,\\n    \'Description\': description,\\n    \'Total Episodes\': total_episodes,\\n    \'URL\': external_urls,\\n    \\n})\\n\\ndf.index += 1\\n```\\n\\n# Finally!\\n\\n\\n```python\\ndf\\n```\\n\\n\\n\\n\\n<div>\\n\\n<table border=\\"1\\" class=\\"dataframe\\">\\n  <thead>\\n    <tr>\\n      <th></th>\\n      <th>Name</th>\\n      <th>Publisher</th>\\n      <th>Description</th>\\n      <th>Total Episodes</th>\\n      <th>URL</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>1</th>\\n      <td>ChannelB \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc</td>\\n      <td>Ali Bandari</td>\\n      <td>\u062f\u0631 \u0647\u0631 \u0627\u067e\u06cc\u0632\u0648\u062f \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0686\u0646\u0644\u200c\u0628\u06cc \u06af\u0632\u0627\u0631\u0634 \u06cc\u06a9 \u0645\u0627\u062c\u0631...</td>\\n      <td>83</td>\\n      <td>https://open.spotify.com/show/2PmMxFZ4OIW5DoUY...</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>Masty o Rasty | \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0645\u0633\u062a\u06cc \u0648 \u0631\u0627\u0633\u062a\u06cc</td>\\n      <td>King Raam</td>\\n      <td>Welcome to Masty o Rasty \\"The Drunken Truth\\" p...</td>\\n      <td>142</td>\\n      <td>https://open.spotify.com/show/35RtCrgybsUG3dos...</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0631\u062e</td>\\n      <td>Rokh Podcast</td>\\n      <td>\u062f\u0627\u0633\u062a\u0627\u0646 \u0632\u0646\u062f\u06af\u06cc \u06a9\u0633\u0627\u0646\u06cc \u06a9\u0647 \u0642\u0633\u0645\u062a\u06cc \u0627\u0632 \u062a\u0627\u0631\u06cc\u062e \u0631\u0627 \u0631\u0642\u0645 \u0632\u062f\u0646\u062f</td>\\n      <td>22</td>\\n      <td>https://open.spotify.com/show/0hDXe6EN56UZsPBr...</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>Radio Deev / \u067e\u0627\u062f\u06a9\u0633\u062a \u0631\u0627\u062f\u06cc\u0648 \u062f\u06cc\u0648</td>\\n      <td>RadioDeev</td>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0631\u0627\u062f\u06cc\u0648 \u062f\u06cc\u0648 \u0645\u062c\u0644\u0647 \u06cc \u0634\u0646\u06cc\u062f\u0627\u0631\u06cc \u0641\u0631\u0647\u0646\u06af\u06cc \u0647...</td>\\n      <td>32</td>\\n      <td>https://open.spotify.com/show/1KZXcjPkHVeaziGY...</td>\\n    </tr>\\n    <tr>\\n      <th>5</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - KetabCast</td>\\n      <td>\u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - KetabCast</td>\\n      <td>\ud83d\udcda\u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - Ketab Cast \u060c \u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u062a\u0627\u0628 \u0647\u0627\u06cc \u0635\u0648\u062a\u06cc ...</td>\\n      <td>534</td>\\n      <td>https://open.spotify.com/show/1eoeo5t8CfjoucLo...</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>996</th>\\n      <td>\u0633\u06af \u0645\u0633\u062a | Sagmast</td>\\n      <td>matinus</td>\\n      <td>sagmast by Matinus alkohol lovers \u0633\u06af \u0645\u0633\u062a \u067e\u0627\u062f\u06a9\u0633...</td>\\n      <td>11</td>\\n      <td>https://open.spotify.com/show/3nEp3Tpo8QLnhVZs...</td>\\n    </tr>\\n    <tr>\\n      <th>997</th>\\n      <td>\u062f\u0627\u0633\u062a\u0627\u0646 \u0647\u0627\u06cc \u06a9\u0648\u062a\u0627\u0647</td>\\n      <td>Farzad Bayan</td>\\n      <td>\u062a\u0648\u06cc \u0627\u06cc\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a</td>\\n      <td>1</td>\\n      <td>https://open.spotify.com/show/5WRbEroh1Wzb5bvW...</td>\\n    </tr>\\n    <tr>\\n      <th>998</th>\\n      <td>NightPods - \u0646\u0627\u06cc\u062a \u067e\u0627\u062f\u0632</td>\\n      <td>NoN Residential</td>\\n      <td>\u0646\u0627\u06cc\u062a\u200c\u067e\u0627\u062f\u0632 \u06cc\u06a9 \u067e\u0627\u062f\u06a9\u0633\u062a \u0633\u0631\u06af\u0631\u0645\u06cc \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0622\u0646 \u062f\u0648\u0631 \u0647\u0645...</td>\\n      <td>5</td>\\n      <td>https://open.spotify.com/show/1o2Kvl0Q0rrOCVEZ...</td>\\n    </tr>\\n    <tr>\\n      <th>999</th>\\n      <td>\ud83d\udd3a\u0627\u06cc\u0644\u0648\u0645\u06cc\u0646\u0627\u062a\u06cc: \u0641\u0631\u0642\u0647\u200c\u0627\u06cc \u06a9\u0647 \u0632\u0645\u06cc\u0646 \u0631\u0627 \u0628\u0644\u0639\u06cc\u062f</td>\\n      <td>1343</td>\\n      <td>\u062f\u0631 \u0627\u06cc\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a \u062f\u0631\u0628\u0627\u0631\u0647\u200c\u06cc \u0641\u0631\u0642\u0647\u200c\u0627\u06cc \u062e\u0648\u0627\u0647\u06cc\u062f \u0634\u0646\u06cc\u062f \u06a9\u0647 ...</td>\\n      <td>2</td>\\n      <td>https://open.spotify.com/show/5ZAb7t3FF1A7eKrD...</td>\\n    </tr>\\n    <tr>\\n      <th>1000</th>\\n      <td>\u0633\u0648\u0644\u0627\u0631\u06cc\u0633 \ud83d\udcab</td>\\n      <td>Hesam Bokazadeh</td>\\n      <td>\u0627\u06af\u0647 \u0634\u0645\u0627 \u0647\u0645 \u0628\u0627 \u0634\u0646\u06cc\u062f\u0646 \u0627\u0633\u0645 \u0622\u0633\u06cc\u0645\u0648\u0641 \u0646\u06cc\u0634\u062a\u0648\u0646 \u0628\u0627\u0632 \u0645\u06cc\u0634\u0647...</td>\\n      <td>9</td>\\n      <td>https://open.spotify.com/show/0IOjqr6qtaaFw9B4...</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>1000 rows \xd7 5 columns</p>\\n</div>\\n\\n\\n\\n## Top 20\\n\\n\\n```python\\ndf[:20]\\n```\\n\\n\\n\\n\\n<div>\\n\\n<table border=\\"1\\" class=\\"dataframe\\">\\n  <thead>\\n    <tr>\\n      <th></th>\\n      <th>Name</th>\\n      <th>Publisher</th>\\n      <th>Description</th>\\n      <th>Total Episodes</th>\\n      <th>URL</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>1</th>\\n      <td>ChannelB \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc</td>\\n      <td>Ali Bandari</td>\\n      <td>\u062f\u0631 \u0647\u0631 \u0627\u067e\u06cc\u0632\u0648\u062f \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0686\u0646\u0644\u200c\u0628\u06cc \u06af\u0632\u0627\u0631\u0634 \u06cc\u06a9 \u0645\u0627\u062c\u0631...</td>\\n      <td>83</td>\\n      <td>https://open.spotify.com/show/2PmMxFZ4OIW5DoUY...</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>Masty o Rasty | \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0645\u0633\u062a\u06cc \u0648 \u0631\u0627\u0633\u062a\u06cc</td>\\n      <td>King Raam</td>\\n      <td>Welcome to Masty o Rasty \\"The Drunken Truth\\" p...</td>\\n      <td>142</td>\\n      <td>https://open.spotify.com/show/35RtCrgybsUG3dos...</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0631\u062e</td>\\n      <td>Rokh Podcast</td>\\n      <td>\u062f\u0627\u0633\u062a\u0627\u0646 \u0632\u0646\u062f\u06af\u06cc \u06a9\u0633\u0627\u0646\u06cc \u06a9\u0647 \u0642\u0633\u0645\u062a\u06cc \u0627\u0632 \u062a\u0627\u0631\u06cc\u062e \u0631\u0627 \u0631\u0642\u0645 \u0632\u062f\u0646\u062f</td>\\n      <td>22</td>\\n      <td>https://open.spotify.com/show/0hDXe6EN56UZsPBr...</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>Radio Deev / \u067e\u0627\u062f\u06a9\u0633\u062a \u0631\u0627\u062f\u06cc\u0648 \u062f\u06cc\u0648</td>\\n      <td>RadioDeev</td>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0631\u0627\u062f\u06cc\u0648 \u062f\u06cc\u0648 \u0645\u062c\u0644\u0647 \u06cc \u0634\u0646\u06cc\u062f\u0627\u0631\u06cc \u0641\u0631\u0647\u0646\u06af\u06cc \u0647...</td>\\n      <td>32</td>\\n      <td>https://open.spotify.com/show/1KZXcjPkHVeaziGY...</td>\\n    </tr>\\n    <tr>\\n      <th>5</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - KetabCast</td>\\n      <td>\u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - KetabCast</td>\\n      <td>\ud83d\udcda\u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - Ketab Cast \u060c \u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u062a\u0627\u0628 \u0647\u0627\u06cc \u0635\u0648\u062a\u06cc ...</td>\\n      <td>534</td>\\n      <td>https://open.spotify.com/show/1eoeo5t8CfjoucLo...</td>\\n    </tr>\\n    <tr>\\n      <th>6</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0622\u0631\u0627\u0645\u0634</td>\\n      <td>arameshpodcast.com</td>\\n      <td>\u0647\u062f\u0641 \u067e\u0627\u062f\u06a9\u0633\u062a \u0622\u0631\u0627\u0645\u0634\u060c \u0647\u062f\u06cc\u0647 \u06a9\u0631\u062f\u0646 \u062f\u0642\u0627\u06cc\u0642\u06cc \u0622\u0631\u0627\u0645\u0634 \u0648 \u0627\u062d\u0633...</td>\\n      <td>29</td>\\n      <td>https://open.spotify.com/show/7cr35mqkp0UbVPCn...</td>\\n    </tr>\\n    <tr>\\n      <th>7</th>\\n      <td>\u200cBPLUS \u0628\u06cc\u200c\u067e\u0644\u0627\u0633 \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u062e\u0644\u0627\u0635\u0647 \u06a9\u062a\u0627\u0628</td>\\n      <td>Ali Bandari</td>\\n      <td>\u062e\u0644\u0627\u0635\u0647\u200c\u06cc \u0641\u0627\u0631\u0633\u06cc \u06a9\u062a\u0627\u0628\u0647\u0627\u06cc \u063a\u06cc\u0631\u062f\u0627\u0633\u062a\u0627\u0646\u06cc</td>\\n      <td>63</td>\\n      <td>https://open.spotify.com/show/5HqY5kOdUaGvmQsW...</td>\\n    </tr>\\n    <tr>\\n      <th>8</th>\\n      <td>Digesttt/ \u067e\u0627\u062f\u06a9\u0633\u062a \u062f\u0627\u06cc\u062c\u0633\u062a</td>\\n      <td>\u0641\u0631\u0634\u0627\u062f \u0645\u062d\u0645\u0648\u062f\u06cc</td>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u062f\u0627\u06cc\u062c\u0633\u062a \u0645\u0633\u0627\u0626\u0644 \u0646\u0633\u0628\u062a\u0627\u064b \u067e\u06cc\u0686\u06cc\u062f\u0647 \u062f\u0646\u06cc\u0627\u06cc \u0627\u0637\u0631\u0627\u0641 ...</td>\\n      <td>41</td>\\n      <td>https://open.spotify.com/show/0APHFnyp6hB6de0s...</td>\\n    </tr>\\n    <tr>\\n      <th>9</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u062c\u0646\u0627\u06cc\u06cc \u0622\u062e\u0631\u06cc\u0646 \u0634\u0627\u0647\u062f</td>\\n      <td>Mahdi Pourbaqi</td>\\n      <td>\u0627\u06cc\u0646 \u06cc\u06a9 \u067e\u0627\u062f\u06a9\u0633\u062a \u0642\u0635\u0647 \u06af\u0648 \u0646\u06cc\u0633\u062a \u067e\u0631\u0648\u0646\u062f\u0647 \u0647\u0627\u06cc \u062c\u0646\u0627\u06cc\u06cc \u0648\u0627\u0642...</td>\\n      <td>79</td>\\n      <td>https://open.spotify.com/show/5oJxOMLttosMDiPu...</td>\\n    </tr>\\n    <tr>\\n      <th>10</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0645\u062e\u062a\u0635\u0631 \u0648 \u0645\u0641\u06cc\u062f</td>\\n      <td>Ardeshir Tayebi</td>\\n      <td>\u06a9\u0646\u062c\u200c\u06a9\u0627\u0648\u06cc \u062f\u0631 \u062a\u0627\u0631\u06cc\u062e\u060c \u0633\u06cc\u0627\u0633\u062a \u0648 \u0639\u0644\u0645 \u0628\u0627 \u0627\u0631\u062f\u0634\u06cc\u0631 \u0637\u06cc\u0628\u06cc</td>\\n      <td>50</td>\\n      <td>https://open.spotify.com/show/7bCiopnv1MlEl2UE...</td>\\n    </tr>\\n    <tr>\\n      <th>11</th>\\n      <td>meditation podcast | \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a</td>\\n      <td>meditation podcast</td>\\n      <td>\u062f\u0631 \u0647\u0631 \u0627\u067e\u06cc\u0632\u0648\u062f \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a\u060c \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646\u06cc \u0628\u0631\u0627\u06cc \u06a9\u0645\u06a9...</td>\\n      <td>58</td>\\n      <td>https://open.spotify.com/show/2KqzlJNguHFSjx73...</td>\\n    </tr>\\n    <tr>\\n      <th>12</th>\\n      <td>On podcast \u067e\u0627\u062f\u06a9\u0633\u062a \u0622\u0646</td>\\n      <td>mersen</td>\\n      <td>\u062f\u0631 \u0647\u0631 \u0627\u067e\u06cc\u0632\u0648\u062f \u067e\u0627\u062f\u06a9\u0633\u062a \u0622\u0646\u060c \u062f\u0627\u0633\u062a\u0627\u0646 \u0648\u0627\u0642\u0639\u06cc \u0622\u062f\u0645\u0647\u0627 \u0631\u0648 ...</td>\\n      <td>20</td>\\n      <td>https://open.spotify.com/show/18dEbxRMhmCOSBLB...</td>\\n    </tr>\\n    <tr>\\n      <th>13</th>\\n      <td>owrsi | \u067e\u0627\u062f\u06a9\u0633\u062a \u0627\u0648\u0631\u0633\u06cc</td>\\n      <td>Saman Karampour</td>\\n      <td>\u063a\u06cc\u0631 \u0633\u0637\u062d\u06cc \u0628\u0628\u06cc\u0646\u06cc\u0645 \u0648 \u0628\u0634\u0646\u0648\u06cc\u0645</td>\\n      <td>11</td>\\n      <td>https://open.spotify.com/show/5G5S9nV9WaMVbsJh...</td>\\n    </tr>\\n    <tr>\\n      <th>14</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0646\u0627\u0648\u06a9\u0633\u062a / Navcast/\u062a\u0631\u062c\u0645\u0647\u0654 \u0645\u0633\u062a\u0642\u0644 \u06a9\u062a\u0627...</td>\\n      <td>Roshan Abady</td>\\n      <td>\u0642\u0633\u0645\u062a\u0647\u0627\u06cc \u0627\u06cc\u0646 \u0641\u0635\u0644 \u0627\u0632 \u0646\u0627\u0648\u06a9\u0633\u062a \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u06cc\u0648\u0633\u062a\u0647 \u0628\u0647 \u062a\u0631...</td>\\n      <td>74</td>\\n      <td>https://open.spotify.com/show/2r3S4hgcs0ksj5V9...</td>\\n    </tr>\\n    <tr>\\n      <th>15</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0628\u0648\u0645</td>\\n      <td>Mehdi Abbasi</td>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u062a\u0627\u0631\u06cc\u062e \u0641\u0644\u0633\u0641\u0647</td>\\n      <td>34</td>\\n      <td>https://open.spotify.com/show/3a6TjdLquDQvSXtV...</td>\\n    </tr>\\n    <tr>\\n      <th>16</th>\\n      <td>Moniaz Podcast | \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0645\u0646\u06cc\u0627\u0632</td>\\n      <td>moniaz</td>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0645\u0646\u06cc\u0627\u0632 \u0628\u0627 \u0647\u062f\u0641 \u0622\u06af\u0627\u0647\u06cc \u0628\u062e\u0634\u06cc \u062f\u0631 \u062c\u0647\u062a \u0627\u06cc\u062c\u0627\u062f \u0632\u0646...</td>\\n      <td>47</td>\\n      <td>https://open.spotify.com/show/2pCF0JIZOagq3OJS...</td>\\n    </tr>\\n    <tr>\\n      <th>17</th>\\n      <td>R.O.Tik | \u067e\u0627\u062f\u06a9\u0633\u062a \u0627\u0631\u0648\u062a\u06cc\u06a9</td>\\n      <td>R.O.\u2714</td>\\n      <td>\ud83d\udd1e\u062a\u0646\u0647\u0627 \u067e\u0627\u062f\u06a9\u0633\u062a \u0627\u0631\u0648\u062a\u06cc\u06a9 \u0627\u06cc\u0631\u0648\u0646\u06cc!\ud83c\udf51\ud83c\udf46\u0646\u0648\u062f \u06cc\u0627 \u0635\u062f\u0627\u0633 \u0633\u06a9\u0633\u062a\u0648...</td>\\n      <td>7</td>\\n      <td>https://open.spotify.com/show/7gFfKTEEE0ILmTLP...</td>\\n    </tr>\\n    <tr>\\n      <th>18</th>\\n      <td>Saate Sefr | \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0633\u0627\u0639\u062a \u0635\u0641\u0631</td>\\n      <td>Amin Matin | \u0627\u0645\u06cc\u0646 \u0645\u062a\u06cc\u0646</td>\\n      <td>\u0633\u0627\u0639\u062a \u0635\u0641\u0631 \u0631\u0648\u0627\u06cc\u062a\u06cc \u0627\u0633\u062a \u0627\u0632 \u0645\u0639\u0645\u0627\u06cc \u0632\u0645\u0627\u0646 | *\u062a\u0648\u062c\u0647 : \u0634\u0627...</td>\\n      <td>39</td>\\n      <td>https://open.spotify.com/show/6ZbOqYS6h8Q4e2h2...</td>\\n    </tr>\\n    <tr>\\n      <th>19</th>\\n      <td>Ravi | \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0631\u0627\u0648\u06cc</td>\\n      <td>arash kaviani</td>\\n      <td>\u0645\u0627 \u0631\u0648\u0627\u06cc\u062a \u06af\u0631 \u0642\u0635\u0647 \u0632\u0646\u062f\u06af\u06cc \u0627\u0641\u0631\u0627\u062f\u06cc \u0647\u0633\u062a\u06cc\u0645 \u06a9\u0647 \u06cc\u06a9 \u0686\u0627\u0644\u0634\u06cc...</td>\\n      <td>23</td>\\n      <td>https://open.spotify.com/show/6YpWbAA0PL9A3jEF...</td>\\n    </tr>\\n    <tr>\\n      <th>20</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u2013 \u062c\u0627\u062f\u06cc \u062f\u0627\u062a \u0646\u062a | \u06a9\u06cc\u0628\u0631\u062f \u0622\u0632\u0627\u062f</td>\\n      <td>Jadi</td>\\n      <td>\u062f\u0631 \u062f\u0641\u0627\u0639 \u0627\u0632 \u0622\u0632\u0627\u062f\u06cc \u06a9\u06cc\u0628\u0631\u062f</td>\\n      <td>20</td>\\n      <td>https://open.spotify.com/show/2la9aW3sYTNjxVaa...</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\\n\\n\\n## Shows containing word \'\u0645\u062f\u06cc\u062a\u06cc\u0634\u0646\'\\n\\n\\n```python\\nslice = df[df[\'Description\'].str.contains(\'\u0645\u062f\u06cc\u062a\u06cc\u0634\u0646\')]\\nslice\\n```\\n\\n\\n\\n\\n<div>\\n\\n<table border=\\"1\\" class=\\"dataframe\\">\\n  <thead>\\n    <tr>\\n      <th></th>\\n      <th>Name</th>\\n      <th>Publisher</th>\\n      <th>Description</th>\\n      <th>Total Episodes</th>\\n      <th>URL</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>6</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0622\u0631\u0627\u0645\u0634</td>\\n      <td>arameshpodcast.com</td>\\n      <td>\u0647\u062f\u0641 \u067e\u0627\u062f\u06a9\u0633\u062a \u0622\u0631\u0627\u0645\u0634\u060c \u0647\u062f\u06cc\u0647 \u06a9\u0631\u062f\u0646 \u062f\u0642\u0627\u06cc\u0642\u06cc \u0622\u0631\u0627\u0645\u0634 \u0648 \u0627\u062d\u0633...</td>\\n      <td>29</td>\\n      <td>https://open.spotify.com/show/7cr35mqkp0UbVPCn...</td>\\n    </tr>\\n    <tr>\\n      <th>11</th>\\n      <td>meditation podcast | \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a</td>\\n      <td>meditation podcast</td>\\n      <td>\u062f\u0631 \u0647\u0631 \u0627\u067e\u06cc\u0632\u0648\u062f \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a\u060c \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646\u06cc \u0628\u0631\u0627\u06cc \u06a9\u0645\u06a9...</td>\\n      <td>58</td>\\n      <td>https://open.spotify.com/show/2KqzlJNguHFSjx73...</td>\\n    </tr>\\n    <tr>\\n      <th>38</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u0641\u0627\u0631\u0633\u06cc \u062f\u0627\u0631\u0645\u0627 | Dharma Meditation...</td>\\n      <td>Ali Delshad</td>\\n      <td>\u0645\u0631\u0627\u0642\u0628\u0647 \u06cc\u0627 \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u0627\u0632 \u0637\u0631\u06cc\u0642 \u0648\u0631\u0648\u062f \u0628\u0647 \u0628\u062e\u0634 \u0646\u06cc\u0645\u0647 \u062e\u0648\u062f...</td>\\n      <td>100</td>\\n      <td>https://open.spotify.com/show/0VcAShPf0PhYeE1w...</td>\\n    </tr>\\n    <tr>\\n      <th>108</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0645\u062f\u06cc\u062a\u06cc\u0634\u0646 \u0641\u0627\u0631\u0633\u06cc \u062f\u0627\u0631\u0645\u0627 | Dharma Meditation...</td>\\n      <td>Ali Delshad</td>\\n      <td>\u0645\u0646 \u0639\u0644\u06cc \u0647\u0633\u062a\u0645 \u0648 \u067e\u0627\u062f\u06a9\u0633\u062a \u062f\u0627\u0631\u0645\u0627 \u0631\u0648 \u0628\u0627 \u06a9\u0645\u06a9 \u0647\u0644\u06cc\u0627 \u0628\u0631\u0627\u062a...</td>\\n      <td>14</td>\\n      <td>https://open.spotify.com/show/5mLXV3uB5GX6ZHct...</td>\\n    </tr>\\n    <tr>\\n      <th>165</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0627\u0646\u06af\u06cc\u0632\u0634\u06cc \u0648 \u0698\u0631\u0641\u200c\u0627\u0646\u062f\u06cc\u0634\u06cc \u062f\u0627\u0631\u0645\u0627 \u0645\u0648\u062a\u06cc\u0648\u06cc\u0634\u0646 | D...</td>\\n      <td>Ali Delshad</td>\\n      <td>\u062f\u0631 \u067e\u0627\u062f\u06a9\u0633\u062a \u062f\u0627\u0631\u0645\u0627 \u0645\u0648\u062a\u06cc\u0648\u06cc\u0634\u0646\u060c \u0633\u0639\u06cc \u0645\u06cc \u06a9\u0646\u06cc\u0645 \u0628\u0627 \u06a9\u0627\u0631\u0622\u0641...</td>\\n      <td>6</td>\\n      <td>https://open.spotify.com/show/0aslEbqmSj69VDRE...</td>\\n    </tr>\\n    <tr>\\n      <th>192</th>\\n      <td>\u0622\u0631\u0627\u0645 \u067e\u0627\u062f\u06a9\u0633\u062a</td>\\n      <td>\u0645\u062d\u0645\u062f \u0645\u0642\u0627\u0645\u06cc\u0627\u0646 \u0632\u0627\u062f\u0647</td>\\n      <td>\u0622\u0631\u0627\u0645 \u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u0627\u0646\u0627\u0644\u06cc \u0628\u0627 \u0645\u062d\u062a\u0648\u0627\u06cc \u0627\u0646\u06af\u06cc\u0632\u0634\u06cc \u0648\u0627\u062c\u062a\u0645\u0627\u0639\u06cc ...</td>\\n      <td>7</td>\\n      <td>https://open.spotify.com/show/6ZKqF9FLQyo4ZurD...</td>\\n    </tr>\\n    <tr>\\n      <th>339</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633\u06cc \u0648 \u067e\u0632\u0634\u06a9\u06cc \u062f\u0627\u0631\u0645\u0627 \u06a9\u0644\u06cc\u0646\u06cc\u06a9 | Dharma...</td>\\n      <td>Ali Delshad</td>\\n      <td>\u062f\u0627\u0631\u0645\u0627\u200c \u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u067e\u0627\u062f\u06a9\u0633\u062a\u06cc\u0647 \u06a9\u0647 \u062f\u0631 \u0645\u0648\u0631\u062f \u0645\u0633\u0627\u0626\u0644 \u0631\u0648\u0627\u0646\u0634\u0646...</td>\\n      <td>19</td>\\n      <td>https://open.spotify.com/show/2ptVB562q1m0hBo4...</td>\\n    </tr>\\n    <tr>\\n      <th>783</th>\\n      <td>YogaLifeRomane \u06cc\u0648\u06af\u0627 \u0648 \u0632\u0646\u062f\u06af\u06cc \u0628\u0627 \u0631\u0645\u0627\u0646\u0647</td>\\n      <td>Romaneh Khalili Pour</td>\\n      <td>\u0633\u0644\u0627\u0645 \u0645\u0646 \u0631\u0645\u0627\u0646\u0647 \u062e\u0644\u06cc\u0644\u06cc \u067e\u0648\u0631 \u0647\u0633\u062a\u0645 \u0645\u0631\u0628\u06cc \u06cc\u0648\u06af\u0627  \u062f\u0631 \u0647\u0631 ...</td>\\n      <td>14</td>\\n      <td>https://open.spotify.com/show/0fu00jdnh2Cn3pS8...</td>\\n    </tr>\\n    <tr>\\n      <th>870</th>\\n      <td>Asoothe | \u0622\u0633\u0648\u062f\u0647</td>\\n      <td>Araz Pourvatan</td>\\n      <td>Life is an experiment. Here the experience is ...</td>\\n      <td>3</td>\\n      <td>https://open.spotify.com/show/2HGdWKcdo6Sj32wn...</td>\\n    </tr>\\n    <tr>\\n      <th>947</th>\\n      <td>RAZPAD</td>\\n      <td>\u0631\u0627\u0636\u06cc\u0647 \u0631\u0636\u0627\u06cc\u06cc</td>\\n      <td>\u0633\u0644\u0627\u0645. \u0645\u0646 \u0627\u06cc\u0646\u062c\u0627 \u0647\u0633\u062a\u0645 \u0628\u0627 \u0647\u062f\u0641 \u0642\u0631\u0627\u0631 \u062f\u0627\u062f\u0646 \u0645\u0647\u0631\u0628\u0627\u0646\u06cc \u0648...</td>\\n      <td>9</td>\\n      <td>https://open.spotify.com/show/6HiN7mGLCz7D1A8c...</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\\n\\n\\n## Statistics\\n\\n\\n```python\\ndf.describe()\\n```\\n\\n\\n\\n\\n<div>\\n\\n<table border=\\"1\\" class=\\"dataframe\\">\\n  <thead>\\n    <tr>\\n      <th></th>\\n      <th>Total Episodes</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>count</th>\\n      <td>1000.000000</td>\\n    </tr>\\n    <tr>\\n      <th>mean</th>\\n      <td>27.484000</td>\\n    </tr>\\n    <tr>\\n      <th>std</th>\\n      <td>75.644338</td>\\n    </tr>\\n    <tr>\\n      <th>min</th>\\n      <td>0.000000</td>\\n    </tr>\\n    <tr>\\n      <th>25%</th>\\n      <td>4.000000</td>\\n    </tr>\\n    <tr>\\n      <th>50%</th>\\n      <td>10.000000</td>\\n    </tr>\\n    <tr>\\n      <th>75%</th>\\n      <td>25.000000</td>\\n    </tr>\\n    <tr>\\n      <th>max</th>\\n      <td>1283.000000</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\\n\\n\\n\\n```python\\ndf[\'Total Episodes\'].value_counts()\\n```\\n\\n\\n\\n\\n    1      105\\n    2       69\\n    4       57\\n    3       55\\n    5       52\\n          ... \\n    114      1\\n    115      1\\n    116      1\\n    136      1\\n    0        1\\n    Name: Total Episodes, Length: 126, dtype: int64\\n\\n\\n\\n## With more than 400 Episodes\\n\\n\\n```python\\ndf[df[\'Total Episodes\'] > 400]\\n```\\n\\n\\n\\n\\n<div>\\n<table border=\\"1\\" class=\\"dataframe\\">\\n  <thead>\\n    <tr>\\n      <th></th>\\n      <th>Name</th>\\n      <th>Publisher</th>\\n      <th>Description</th>\\n      <th>Total Episodes</th>\\n      <th>URL</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>5</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - KetabCast</td>\\n      <td>\u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - KetabCast</td>\\n      <td>\ud83d\udcda\u06a9\u062a\u0627\u0628 \u06a9\u0633\u062a - Ketab Cast \u060c \u067e\u0627\u062f\u06a9\u0633\u062a \u06a9\u062a\u0627\u0628 \u0647\u0627\u06cc \u0635\u0648\u062a\u06cc ...</td>\\n      <td>534</td>\\n      <td>https://open.spotify.com/show/1eoeo5t8CfjoucLo...</td>\\n    </tr>\\n    <tr>\\n      <th>54</th>\\n      <td>Radio Padio | \u067e\u0627\u062f\u06a9\u0633\u062a \u062e\u0628\u0631\u06cc \u067e\u0627\u062f\u06cc\u0648</td>\\n      <td>RadioPadio | \u067e\u0627\u062f\u06a9\u0633\u062a \u062e\u0628\u0631\u06cc \u067e\u0627\u062f\u06cc\u0648</td>\\n      <td>\u0646\u0645\u06cc\u0630\u0627\u0631\u06cc\u0645 \u0628\u06cc\u200c\u062e\u0628\u0631 \u0628\u0645\u0648\u0646\u06cc\u0646! \u067e\u0627\u062f\u06a9\u0633\u062a \u062e\u0628\u0631\u06cc \u0631\u0627\u062f\u06cc\u0648 \u067e\u0627\u062f\u06cc...</td>\\n      <td>529</td>\\n      <td>https://open.spotify.com/show/47ITpNV6wVBmF0Hw...</td>\\n    </tr>\\n    <tr>\\n      <th>469</th>\\n      <td>\u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633\u06cc \u0634\u062e\u0635\u06cc\u062a</td>\\n      <td>\u0627\u0633\u0627\u062a\u06cc\u062f \u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633\u06cc \u062f\u0627\u0646\u0634\u06af\u0627\u0647\u200c\u0647\u0627</td>\\n      <td>\u062f\u06a9\u062a\u0631 \u0641\u0631\u0647\u0646\u06af \u0647\u0644\u0627\u06a9\u0648\u06cc\u06cc \u062f\u06a9\u062a\u0631 \u0645\u062d\u0645\u062f\u0631\u0636\u0627 \u0633\u0631\u06af\u0644\u0632\u0627\u06cc\u06cc \u062f\u06a9\u062a\u0631 ...</td>\\n      <td>833</td>\\n      <td>https://open.spotify.com/show/7FiQjYyDfZtZHFbU...</td>\\n    </tr>\\n    <tr>\\n      <th>493</th>\\n      <td>\u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633\u06cc \u0634\u062e\u0635\u06cc\u062a\u200c \u0648 \u062e\u0648\u0634\u0628\u062e\u062a\u06cc</td>\\n      <td>Plato</td>\\n      <td>\u0647\u0645\u0647 \u0645\u06a9\u0627\u0644\u0645\u0627\u062a \u062f\u06a9\u062a\u0631 \u0647\u0644\u0627\u06a9\u0648\u06cc\u06cc \u062f\u0631 \u0641\u0635\u0644 1 \u0642\u0631\u0627\u0631 \u062f\u0627\u0631\u0646\u062f. ...</td>\\n      <td>1073</td>\\n      <td>https://open.spotify.com/show/5r5dc2JA7Y56ZYFd...</td>\\n    </tr>\\n    <tr>\\n      <th>550</th>\\n      <td>\u062a\u0644\u0648\u06cc\u0632\u06cc\u0648\u0646 \u0645\u06cc\u0647\u0646 | mihantv</td>\\n      <td>mihantv1</td>\\n      <td>\u0628\u0627 \u0645\u0627 \u0627\u0632 \u067e\u0634\u062a \u067e\u0631\u062f\u0647 \u06cc \u0633\u06cc\u0627\u0633\u062a \u0628\u0627 \u062e\u0628\u0631 \u0634\u0648\u06cc\u062f \u0648 \u0627\u0632 \u0628\u0647\u062a...</td>\\n      <td>1283</td>\\n      <td>https://open.spotify.com/show/7cPVgVgTb2PAnysU...</td>\\n    </tr>\\n    <tr>\\n      <th>939</th>\\n      <td>\u062f\u0627\u0633\u062a\u0627\u0646\u06a9</td>\\n      <td>\u0633\u0639\u06cc\u062f \u0627\u0645\u06cc\u0646\u06cc\u0627\u0646</td>\\n      <td>\u062f\u0631 \u0627\u067e\u06cc\u0632\u0648\u062f\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f\u060c \u0645\u0646 \u0628\u0631\u062f\u0627\u0634\u062a \u062e\u0648\u062f\u0645 \u0631\u0627 \u0627\u0632 \u062f\u0627\u0633\u062a\u0627\u0646...</td>\\n      <td>430</td>\\n      <td>https://open.spotify.com/show/3BjE3M4G87Yri4Ot...</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\\n\\n\\n\\n```python\\ndf[df[\'Total Episodes\'] < 10]\\n```\\n\\n\\n\\n\\n<div>\\n\\n<table border=\\"1\\" class=\\"dataframe\\">\\n  <thead>\\n    <tr>\\n      <th></th>\\n      <th>Name</th>\\n      <th>Publisher</th>\\n      <th>Description</th>\\n      <th>Total Episodes</th>\\n      <th>URL</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>17</th>\\n      <td>R.O.Tik | \u067e\u0627\u062f\u06a9\u0633\u062a \u0627\u0631\u0648\u062a\u06cc\u06a9</td>\\n      <td>R.O.\u2714</td>\\n      <td>\ud83d\udd1e\u062a\u0646\u0647\u0627 \u067e\u0627\u062f\u06a9\u0633\u062a \u0627\u0631\u0648\u062a\u06cc\u06a9 \u0627\u06cc\u0631\u0648\u0646\u06cc!\ud83c\udf51\ud83c\udf46\u0646\u0648\u062f \u06cc\u0627 \u0635\u062f\u0627\u0633 *\u0633***\u06a9**\u0633\u062a\u0648...</td>\\n      <td>7</td>\\n      <td>https://open.spotify.com/show/7gFfKTEEE0ILmTLP...</td>\\n    </tr>\\n    <tr>\\n      <th>42</th>\\n      <td>\u0648\u0642\u062a \u062e\u0648\u0627\u0628 | \u067e\u0627\u062f\u06a9\u0633\u062a\u06cc \u0628\u0631\u0627\u06cc \u0631\u0641\u0639 \u0628\u06cc \u062e\u0648\u0627\u0628\u06cc</td>\\n      <td>\u0644\u0648\u06cc\u06cc \u0648 \u062f\u0648\u0633\u062a\u0627\u0646</td>\\n      <td>\u0648\u0642\u062a \u062e\u0648\u0627\u0628 \u060c \u06cc\u06a9 \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0632\u0628\u0627\u0646\u0647 \u06a9\u0647 \u0628\u0631\u0627\u06cc \u0645\u0648\u0627\u0642\u0639...</td>\\n      <td>5</td>\\n      <td>https://open.spotify.com/show/5c27xgMZdXaSzAxb...</td>\\n    </tr>\\n    <tr>\\n      <th>59</th>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0647\u064f\u0634\u0652\u062a\u064e\u06a9\u0652 | Hoshtak</td>\\n      <td>MohammadSalar</td>\\n      <td>\u067e\u0627\u062f\u06a9\u0633\u062a \u0647\u0634\u062a\u06a9 \u0631\u0648 \u0645\u06cc \u0634\u0646\u0648\u06cc\u062f \u0645\u0646\u060c \u0645\u062d\u0645\u062f \u0633\u0627\u0644\u0627\u0631 \u0646\u0639\u0645\u062a\u06cc \u0647...</td>\\n      <td>8</td>\\n      <td>https://open.spotify.com/show/4Fhy3dfYAlkB5Nth...</td>\\n    </tr>\\n    <tr>\\n      <th>61</th>\\n      <td>Mind Master \u067e\u0627\u062f\u06a9\u0633\u062a</td>\\n      <td>Sara</td>\\n      <td>\u0645\u0627\u06cc\u0646\u062f \u0645\u0633\u062a\u0631 \u06cc\u0647 \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc\u0647 \u06a9\u0647 \u062a\u0648\u0634 \u062c\u0646\u0628\u0647\u200c\u0647\u0627\u06cc \u0645\u062e...</td>\\n      <td>8</td>\\n      <td>https://open.spotify.com/show/5G2T1M7mSbcvY3d1...</td>\\n    </tr>\\n    <tr>\\n      <th>68</th>\\n      <td>salam podcast | \u067e\u0627\u062f\u06a9\u0633\u062a \u0641\u0627\u0631\u0633\u06cc \u0633\u0644\u0627\u0645</td>\\n      <td>basalam</td>\\n      <td>\u0642\u0635\u0647\u200c\u06cc \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u0648 \u062f\u0633\u062a\u200c\u0633\u0627\u062e\u062a\u0647\u200c\u0647\u0627 \u0627\u0632 \u0632\u0628\u0627\u0646 \u0633\u0627\u0632\u0646\u062f\u06af\u0627\u0646</td>\\n      <td>8</td>\\n      <td>https://open.spotify.com/show/7c7QY4VEU3MjDT9Q...</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>995</th>\\n      <td>\u0633\u0628\u06a9\u062a\u0648 | Sabketo (\u0641\u0627\u0631\u0633\u06cc)</td>\\n      <td>Sabketo</td>\\n      <td>\u062f\u0631 \u067e\u0627\u062f\u06a9\u0633\u062a\u200c\u0647\u0627\u06cc \u0633\u0628\u06a9\u062a\u0648 \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0634\u0646\u0648\u0646\u062f\u0647\u200c\u0647\u0627...</td>\\n      <td>0</td>\\n      <td>https://open.spotify.com/show/7wMHG6jwpMg4OWxF...</td>\\n    </tr>\\n    <tr>\\n      <th>997</th>\\n      <td>\u062f\u0627\u0633\u062a\u0627\u0646 \u0647\u0627\u06cc \u06a9\u0648\u062a\u0627\u0647</td>\\n      <td>Farzad Bayan</td>\\n      <td>\u062a\u0648\u06cc \u0627\u06cc\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a</td>\\n      <td>1</td>\\n      <td>https://open.spotify.com/show/5WRbEroh1Wzb5bvW...</td>\\n    </tr>\\n    <tr>\\n      <th>998</th>\\n      <td>NightPods - \u0646\u0627\u06cc\u062a \u067e\u0627\u062f\u0632</td>\\n      <td>NoN Residential</td>\\n      <td>\u0646\u0627\u06cc\u062a\u200c\u067e\u0627\u062f\u0632 \u06cc\u06a9 \u067e\u0627\u062f\u06a9\u0633\u062a \u0633\u0631\u06af\u0631\u0645\u06cc \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0622\u0646 \u062f\u0648\u0631 \u0647\u0645...</td>\\n      <td>5</td>\\n      <td>https://open.spotify.com/show/1o2Kvl0Q0rrOCVEZ...</td>\\n    </tr>\\n    <tr>\\n      <th>999</th>\\n      <td>\ud83d\udd3a\u0627\u06cc\u0644\u0648\u0645\u06cc\u0646\u0627\u062a\u06cc: \u0641\u0631\u0642\u0647\u200c\u0627\u06cc \u06a9\u0647 \u0632\u0645\u06cc\u0646 \u0631\u0627 \u0628\u0644\u0639\u06cc\u062f</td>\\n      <td>1343</td>\\n      <td>\u062f\u0631 \u0627\u06cc\u0646 \u067e\u0627\u062f\u06a9\u0633\u062a \u062f\u0631\u0628\u0627\u0631\u0647\u200c\u06cc \u0641\u0631\u0642\u0647\u200c\u0627\u06cc \u062e\u0648\u0627\u0647\u06cc\u062f \u0634\u0646\u06cc\u062f \u06a9\u0647 ...</td>\\n      <td>2</td>\\n      <td>https://open.spotify.com/show/5ZAb7t3FF1A7eKrD...</td>\\n    </tr>\\n    <tr>\\n      <th>1000</th>\\n      <td>\u0633\u0648\u0644\u0627\u0631\u06cc\u0633 \ud83d\udcab</td>\\n      <td>Hesam Bokazadeh</td>\\n      <td>\u0627\u06af\u0647 \u0634\u0645\u0627 \u0647\u0645 \u0628\u0627 \u0634\u0646\u06cc\u062f\u0646 \u0627\u0633\u0645 \u0622\u0633\u06cc\u0645\u0648\u0641 \u0646\u06cc\u0634\u062a\u0648\u0646 \u0628\u0627\u0632 \u0645\u06cc\u0634\u0647...</td>\\n      <td>9</td>\\n      <td>https://open.spotify.com/show/0IOjqr6qtaaFw9B4...</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>486 rows \xd7 5 columns</p>\\n</div>"},{"id":"housing-data-analysis","metadata":{"permalink":"/blog/housing-data-analysis","editUrl":"https://github.com/amirafshari/amirafshari.github.io/tree/main/blog/2020-08-28-housing-data-analysis.md","source":"@site/blog/2020-08-28-housing-data-analysis.md","title":"Housing Data Analysis","description":"density2","date":"2020-08-28T00:00:00.000Z","formattedDate":"August 28, 2020","tags":[{"label":"Data Analysis","permalink":"/blog/tags/data-analysis"},{"label":"Data Visualization","permalink":"/blog/tags/data-visualization"}],"readingTime":0.42,"hasTruncateMarker":true,"authors":[{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"}],"frontMatter":{"slug":"housing-data-analysis","title":"Housing Data Analysis","authors":{"name":"Amir Afshari","title":"Machine Learning Engineer","url":"https://github.com/amirafshari","image_url":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4","imageURL":"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},"tags":["Data Analysis","Data Visualization"]},"unlisted":false,"prevItem":{"title":"Persian Podcasts on Spotify","permalink":"/blog/spotify-persian-podcasts"}},"content":"![density2](https://user-images.githubusercontent.com/17769927/138718424-6f6cd0c6-c5a6-4442-a058-80968fc29035.png)\\n\x3c!--truncate--\x3e\\n\\nThis dataset is based on data from the 1990 California census. Our dataset consist of 26k samples with 10 features.\\n\\nfeatures = [longitude, latitude, housing_median_age, total_rooms, total_bedrooms, population, households, median_income, median_house_value, ocean_proximity]\\n\\n## Ocean Proximity Count\\nOcean Proximity is our only categorical data in this dataset.\\n\\n![ocean_proximity](https://user-images.githubusercontent.com/17769927/138718362-f419fed8-b34c-41cb-9cb2-09f3ce13e5e5.png)\\n![ocean_proximity-pie](https://user-images.githubusercontent.com/17769927/138718371-c17dede1-247e-4090-b54f-6d650121d9cb.png)\\n\\n## Where are the most populated areas?\\n### Population Density Recongnition\\n![density](https://user-images.githubusercontent.com/17769927/138718446-ca1aab50-45b3-4094-86ef-bcb9a4fb07fc.png)\\n![density1](https://user-images.githubusercontent.com/17769927/138718413-3e29fa00-2f4f-4967-a752-39ce56fb455b.png)\\n![density2](https://user-images.githubusercontent.com/17769927/138718424-6f6cd0c6-c5a6-4442-a058-80968fc29035.png)\\n\\n## Correlations\\n### Median Income vs Median House Value (Strongest Correlation)\\n![correlations](https://user-images.githubusercontent.com/17769927/138719144-34f2ed03-e332-4646-811b-3569a8d5f7ae.png)\\n\\n## Distribution of Features\\n![feature-distribution](https://user-images.githubusercontent.com/17769927/138719163-09cf03d6-64e9-409e-b647-66529e2abb73.png)\\n\\n## Outliers\\n![outliers](https://user-images.githubusercontent.com/17769927/138719182-5addddd8-398f-4cb5-9bd7-b293820d9ff2.png)"}]}')}}]);