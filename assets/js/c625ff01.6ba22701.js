"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1044],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),g=r,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||o;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5058:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={slug:"train-custom-object-detector",title:"Train a Custom Object Detector",authors:{name:"Amir Afshari",title:"Machine Learning Engineer",url:"https://github.com/amirafshari",image_url:"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},tags:["Object Detection","Computer Vision","Deep Learning"]},i=void 0,l={permalink:"/blog/train-custom-object-detector",editUrl:"https://github.com/amirafshari/amirafshari.github.io/tree/main/blog/2021-08-28-train-custom-object-detector.md",source:"@site/blog/2021-08-28-train-custom-object-detector.md",title:"Train a Custom Object Detector",description:"download",date:"2021-08-28T00:00:00.000Z",formattedDate:"August 28, 2021",tags:[{label:"Object Detection",permalink:"/blog/tags/object-detection"},{label:"Computer Vision",permalink:"/blog/tags/computer-vision"},{label:"Deep Learning",permalink:"/blog/tags/deep-learning"}],readingTime:2.22,hasTruncateMarker:!0,authors:[{name:"Amir Afshari",title:"Machine Learning Engineer",url:"https://github.com/amirafshari",image_url:"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4",imageURL:"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"}],frontMatter:{slug:"train-custom-object-detector",title:"Train a Custom Object Detector",authors:{name:"Amir Afshari",title:"Machine Learning Engineer",url:"https://github.com/amirafshari",image_url:"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4",imageURL:"https://avatars.githubusercontent.com/u/17769927?s=400&u=d630f608970a53d00295f2e87e88526b41b7d0b1&v=4"},tags:["Object Detection","Computer Vision","Deep Learning"]},prevItem:{title:"Automatic License Plate Detector",permalink:"/blog/license-plate-detector"},nextItem:{title:"Housing Data Analysis",permalink:"/blog/housing-data-analysis"}},s={authorsImageUrls:[void 0]},c=[{value:"Darknet Configurations",id:"darknet-configurations",level:2},{value:"GPU",id:"gpu",level:3},{value:"Weights",id:"weights",level:3},{value:"Generate train.txt and test.txt",id:"generate-traintxt-and-testtxt",level:3},{value:"Configurations",id:"configurations",level:3},{value:"Training",id:"training",level:2},{value:"Configurations",id:"configurations-1",level:3},{value:"Train",id:"train",level:3},{value:"Restart",id:"restart",level:3},{value:"Sanity Check",id:"sanity-check",level:2},{value:"Setup",id:"setup",level:4},{value:"COCO Dataset",id:"coco-dataset",level:4},{value:"Custom Dataset",id:"custom-dataset",level:4},{value:"Metrics",id:"metrics",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/17769927/138662797-827178bd-ce03-4896-b093-1705c3ac6d4f.png",alt:"download"})),(0,r.kt)("h2",{id:"darknet-configurations"},"Darknet Configurations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This documentation is for Google Colab. If you want to know how to compile darknet on your linux local machine (Ubuntu 20.04), please read ",(0,r.kt)("a",{parentName:"strong",href:"https://github.com/amirafshari/LPD-YOLOv4/blob/master/darknet-linux.md"},"this documentation"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# clone repo\n#!git clone https://github.com/AlexeyAB/darknet\n!git clone https://github.com/amirafshari/LPD-YOLOv4\n")),(0,r.kt)("h3",{id:"gpu"},"GPU"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# change makefile to have GPU and OPENCV enabled\n%cd darknet\n!sed -i 's/OPENCV=0/OPENCV=1/' Makefile\n!sed -i 's/GPU=0/GPU=1/' Makefile\n!sed -i 's/CUDNN=0/CUDNN=1/' Makefile\n!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# verify CUDA\n!/usr/local/cuda/bin/nvcc --version\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# make darknet\n!make\n")),(0,r.kt)("h3",{id:"weights"},"Weights"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# pre-trained weights on MS COCO dataset\n!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# pre-trained weights for the convolutional layers\n!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137\n")),(0,r.kt)("h3",{id:"generate-traintxt-and-testtxt"},"Generate train.txt and test.txt"),(0,r.kt)("p",null,"These files are not in the official repo, but you can find them in my repository."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!python generate_train.py\n!python generate_test.py\n")),(0,r.kt)("h3",{id:"configurations"},"Configurations"),(0,r.kt)("p",null,"We need to change/create these files (I configured them for our object (which is license plate), and put them in this repository):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"data/obj.names"),(0,r.kt)("li",{parentName:"ul"},"data/obj.data"),(0,r.kt)("li",{parentName:"ul"},"cfg/yolov4-custom.cgf"),(0,r.kt)("li",{parentName:"ul"},"cfg/yolov4-obj.cfg")),(0,r.kt)("h2",{id:"training"},"Training"),(0,r.kt)("h3",{id:"configurations-1"},"Configurations"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects"},"https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects"),"  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1 Epoch = images_in_train_txt / batch = 2000 / 32 = 62.5")),(0,r.kt)("h3",{id:"train"},"Train"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Access Denied Error\n!chmod +x ./darknet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# set custom cfg to train mode \n%cd cfg\n!sed -i 's/batch=1/batch=64/' yolov4-obj.cfg\n!sed -i 's/subdivisions=1/subdivisions=16/' yolov4-obj.cfg\n%cd ..\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!./darknet detector train ./data/obj.data ./cfg/yolov4-obj.cfg yolov4.conv.137 -dont_show -map\n")),(0,r.kt)("h3",{id:"restart"},"Restart"),(0,r.kt)("p",null,"In case of intruption, we can restart training from our last weight.",(0,r.kt)("br",{parentName:"p"}),"\n","(every 100 iterations our weights are saved to backup folder in yolov4-obj_last.weights) (~every 30 minutes)",(0,r.kt)("br",{parentName:"p"}),"\n","(every 1000 iterations our weight are saved to backup folder in yolo-obj_xxxx.weights)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!./darknet detector train ./data/obj.data ./cfg/yolov4-obj.cfg ./backup/yolov4-obj_last.weights -dont_show -map\n")),(0,r.kt)("h2",{id:"sanity-check"},"Sanity Check"),(0,r.kt)("h4",{id:"setup"},"Setup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# set custom cfg to test mode \n%cd cfg\n!sed -i 's/batch=64/batch=1/' yolov4-obj.cfg\n!sed -i 's/subdivisions=16/subdivisions=1/' yolov4-obj.cfg\n%cd ..\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def imShow(path):\n  import cv2\n  import matplotlib.pyplot as plt\n  %matplotlib inline\n\n  image = cv2.imread(path)\n  height, width = image.shape[:2]\n  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)\n\n  fig = plt.gcf()\n  fig.set_size_inches(18, 10)\n  plt.axis("off")\n  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))\n  plt.show()\n')),(0,r.kt)("h4",{id:"coco-dataset"},"COCO Dataset"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights data/person.jpg\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"imShow('./predictions.jpg')\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/17769927/138662797-827178bd-ce03-4896-b093-1705c3ac6d4f.png",alt:"download"})),(0,r.kt)("h4",{id:"custom-dataset"},"Custom Dataset"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!./darknet detector test ./data/obj.data ./cfg/yolov4-obj.cfg ./backup/yolov4-obj_last.weights ../Cars354.png -thresh 0.3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"imShow('./predictions.jpg')\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/17769927/134551901-37ff3f6d-37ae-42dc-96c3-8064786355fe.jpg",alt:"result-4"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To process a list of images data/train.txt and save results of detection to result.json file use")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!./darknet detector test data/obj.data cfg/yolov4-obj.cfg backup/yolov4-obj_last.weights -ext_output -dont_show -out result.json < data/test.txt\n")),(0,r.kt)("h2",{id:"metrics"},"Metrics"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use -map flag while training for charts"),(0,r.kt)("br",{parentName:"p"}),"\n","mAP-chart (red-line) and Loss-chart (blue-line) will be saved in root directory.",(0,r.kt)("br",{parentName:"p"}),"\n","mAP will be calculated for each 4 Epochs ~ 240 batches"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!./darknet detector map data/obj.data cfg/yolov4-obj.cfg backup/custom.weights\n")))}d.isMDXComponent=!0}}]);